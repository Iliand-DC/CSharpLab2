private void option3ToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (textBox1.TextLength != 0)
            {
                UnicodeEncoding uniEncoding = new UnicodeEncoding();
                byte[] secondString =
                uniEncoding.GetBytes(Path.GetInvalidPathChars());
                using (MemoryStream memStream =
                new MemoryStream(textBox1.TextLength *
                UnicodeEncoding.CharSize))
                {
                    memStream.Write(uniEncoding.GetBytes(textBox1.Text),
                    0, textBox1.TextLength * UnicodeEncoding.CharSize);
                    textBox2.Clear();
                    byte[] byteArray = new byte[textBox1.TextLength * UnicodeEncoding.CharSize];
                    memStream.Seek(0, SeekOrigin.Begin);
                    StreamReader memrdr = new StreamReader(memStream,
                    Encoding.Unicode);
                    int c1 = -1, c2 = memrdr.Read();
                    int i = 0;
                    while (c2 != -1)
                    {
                        int countWord = 0;
                        // CR LF: возврат каретки + перевод строки,
                        // символы Юникода 000D + 000A
                        while (c2 != '\r' && c2 != -1)
                        {
                            c1 = c2;
                            c2 = memrdr.Read();
                            byteArray[i] = (byte)c1;
                            textBox2.AppendText(byteArray[i].ToString());
                            i++;
                        }
                        if (c2 == '\r')
                        {
                            c2 = memrdr.Read();
                            c1 = c2;
                            c2 = memrdr.Read();
                        }
                        textBox2.AppendText("\n");
                    }
                    textBox2.Clear();
                    //char[] charArray = new char[byteArray.Length];
                    string charArray = "";
                    for (i = 0; i < byteArray.Length; i++)
                    {
                        if (byteArray[i] != '\0')
                            charArray += ((char)byteArray[i]).ToString();
                        //charArray[i] = (char)byteArray[i];
                    }
                    charArray += ' ';
                    int j = 0;
                    int palindromCount = 0;
                    string tempString = "", result = "";
                    while (j < charArray.Length)
                    {
                        if (charArray[j] != ' ')
                        {
                            tempString += charArray[j];
                        }
                        else
                        {
                            if (IsPalindrom(to_lowercase(tempString)))
                            {
                                palindromCount++;
                                result += tempString + ' ';
                            }
                            tempString = "";
                        }
                        j++;
                    }
                    if (palindromCount > 1)
                    {
                        if (textBox2.Text.Length > 0)
                            textBox2.AppendText(Environment.NewLine);
                        textBox2.AppendText(result);
                    }
                    result = "";

                    ////byte[] byteArray = Encoding.Unicode.GetBytes(textBox1.Text);
                    //int count = 0;
                    //int countPolindrom = 0;
                    //int start = 0;
                    //textBox2.Text += ' ';
                    //byte[] temp = new byte[byteArray.Length];
                    //for (i = 0; i < byteArray.Length; i++)
                    //{
                    //    if (byteArray[i] != 32)
                    //    {
                    //        count++;
                    //        temp[i] = byteArray[i];
                    //    }
                    //    else
                    //    {
                    //        temp[i] = 0;
                    //        //byte[] temp = new byte[count];
                    //        //for (int j = start; j < i; j++) temp[j] = byteArray[j];
                    //        //if(IsPalindrom(to_lowercase(temp)))
                    //        //{
                    //        //    countPolindrom++;
                    //        //    for (int j = start; j < i; j++) result[j] = byteArray[j];
                    //        //}
                    //        //start = i;
                    //    }
                    //}
                    //if(IsPalindrom(to_lowercase(temp)))
                    //textBox2.Clear();
                    //for (i = 0; i < result.Length; i++) textBox2.AppendText(((char)result[i]).ToString());
                    ////textBox2.Text += '\n';
                    ////textBox2.Text += count;
                }
            }
        }